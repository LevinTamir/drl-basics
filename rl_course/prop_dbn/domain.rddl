domain prop_dbn {
    requirements = { reward-deterministic };

    variables {
        p : { state-fluent, bool, default = false };
        q : { state-fluent, bool, default = false };
        r : { state-fluent, bool, default = false };
        a : { action-fluent, bool, default = false };
        C : { non-fluent, real, default = 1 };
    };

    cpfs {
        p' = if (p ^ r) then Bernoulli(.9) else Bernoulli(.3);
        q' = if (q ^ r) then Bernoulli(.9)
             else if (a) then Bernoulli(.3) else Bernoulli(.8);
        r' = if (~q) then (r) else (r <=> q);
    };

    reward = p + q - C * r;
};

non-fluents nf_dbn {
    domain = prop_dbn;

    non-fluents {
        C = 0.5;
    };
}